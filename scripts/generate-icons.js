import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Convert the module URL to a file path
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const iconsPath = path.resolve(__dirname, '../src/icons/icons.ts');
const outputFilePath = path.resolve(__dirname, '../src/icons/index.tsx');

const icons = fs.readFileSync(iconsPath, 'utf8');

const iconNames = icons
    .match(/const icons: Icon\[\] = \[([\s\S]*?)\];/)[1]
    .split('},')
    .map(item => item.match(/name: '(.*?)'/))
    .filter(Boolean)
    .map(match => match[1].trim());

const generatedCode = `
// This file is auto-generated by a script. Do not modify manually.
import { icons } from './icons';
import Icon, {type IconProps} from './icon';

${iconNames.map(iconName => `
const ${iconName}Icon = (props: IconProps) => {
    const icon = icons.find(icon => icon.name === '${iconName}');
    if (!icon) {
        console.error('Icon "${iconName}" not found in icons array.');
        return null;
    }
    return <Icon path={icon.path} viewBox={icon.viewBox} {...props} />;
};
    
${iconName}Icon.displayName = '${iconName}Icon';
export { ${iconName}Icon };
`).join('\n\n')}
`;

fs.writeFileSync(outputFilePath, generatedCode, 'utf8');

console.log('Icon components index.ts file generated successfully! âœ¨');
